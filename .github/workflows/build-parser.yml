name: Build parser

on:
    push:
        branches:
            - "149-precompile-wasm-parsers"
    workflow_dispatch:
        inputs:
            npmPackageName:
                description: "NPM package name of parser to build"
                type: string
                required: false
                default: "tree-sitter-javascript"
            parserName:
                description: ".wasm file name of parser (without .wasm extension), defaults to npmPackageName"
                type: string
                required: false
            subdirectory:
                description: "Subdirectory containing the parser grammar"
                type: string
                required: false
                default: ""

jobs:
    build:
        name: Build parser
        concurrency: ${{ inputs.npmPackageName }}-${{ inputs.parserName }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16
            - name: Install emscripten
              uses: awalsh128/cache-apt-pkgs-action@latest
              with:
                packages: emscripten
                version: 1.0
            - name: Install tree-sitter cli
              run: npm install --global tree-sitter-cli
            - name: Pull parser
              run: mkdir ${{ inputs.npmPackageName }} && npm pack --verbose --pack-destination . ${{ inputs.npmPackageName }}
            - name: Extract parser
              run: tar --strip-components=1 -xzvf ${{ inputs.npmPackageName }}/*
              working-directory: ${{ inputs.npmPackageName }}
            - name: Build parser
              run: tree-sitter build-wasm ${{ inputs.subdirectory }}
              working-directory: ${{ inputs.npmPackageName }}
            - name: Upload parser
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ inputs.parserName }}
                  path: ${{ inputs.npmPackageName}}/${{ inputs.parserName }}
