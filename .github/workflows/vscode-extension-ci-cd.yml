name: vscode-extension CI/CD

on:
    push:
        branches:
            - main
        tags:
            - "v*.*.*"
    pull_request:
        branches:
            - main
            - "v*.*.*"

permissions:
    contents: write

env:
    TEST_TIMEOUT: 5m

jobs:
    test:
        timeout-minutes: 60
        strategy:
            fail-fast: false
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16
            - name: Install extension dependencies
              run: yarn run install:all
            - name: Build webview
              if: matrix.os != 'macos-latest'
              run: yarn run build:webview
            # TODO: fix this command getting stuck on macos
            - name: Build webview
              if: matrix.os == 'macos-latest'
              uses: nick-fields/retry@v2
              with:
                  timeout_minutes: 1
                  max_attempts: 5
                  command: yarn run build:webview
            - name: Run tests
              uses: coactions/setup-xvfb@v1
              with:
                  run: yarn test

    generate-assets:
        timeout-minutes: 15
        name: Generate assets
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16
            - name: Install extension dependencies
              run: yarn run install:all
            - name: Build webview
              run: yarn run build:webview
            - name: Install asset generation dependencies
              run: |
                  sudo apt install -y ffmpeg libnss3 xvfb
                  xvfb-run -s ":99 -ac -screen 0 800x600x24" yarn test &
                  ffmpeg -y -f x11grab -video_size 800x600 -i :99 -r 60 assets.gif
            - name: Upload assets
              uses: actions/upload-artifact@v3
              with:
                  name: assets
                  path: |
                      assets.gif

    package:
        name: Package extension
        needs: [test, generate-assets]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16
            - name: Install extension dependencies
              run: yarn run install:all
            - name: Build webview
              run: yarn run build:webview
            - name: Package extension
              run: npx @vscode/vsce package --yarn --githubBranch ${{ startsWith(github.head_ref, '') && github.head_ref || github.ref_name  }}
            - name: Upload extension
              uses: actions/upload-artifact@v3
              with:
                  name: code-blocks-${{ startsWith(github.head_ref, '') && github.head_ref || github.ref_name }}.vsix
                  path: code-blocks-*.vsix

    release:
        name: Release extension
        if: startsWith(github.ref, 'refs/tags/v')
        needs: package

        runs-on: ubuntu-latest
        steps:
            - name: Download package
              uses: actions/download-artifact@v3
              with:
                  name: code-blocks-${{ github.ref_name }}.vsix
                  path: .
            - name: Release
              uses: softprops/action-gh-release@v1
              with:
                  generate_release_notes: true
                  files: "*.vsix"
